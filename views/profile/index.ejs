<div class="container py-5">
  <h1 class="mb-5">Profile Settings</h1>

  <div class="grid grid-cols-3 gap-6">
    <!-- Profile Information Card -->
    <div class="card col-span-1">
      <div class="card-header">
        <h3 class="card-title">Profile Information</h3>
        <p class="card-description">Update your account information</p>
      </div>
      <div class="card-content">
        <form action="/profile" method="POST">
          <div class="form-group">
            <label for="username" class="form-label">Username</label>
            <input type="text" id="username" name="username" class="form-control" value="<%= user.username %>" required>
          </div>

          <div class="form-group">
            <label for="email" class="form-label">Email</label>
            <input type="email" id="email" name="email" class="form-control" value="<%= user.email %>" required>
          </div>

          <button type="submit" class="btn btn-primary">Update Profile</button>
        </form>
      </div>
    </div>

    <!-- Account Card -->
    <div class="card col-span-1">
      <div class="card-header">
        <h3 class="card-title">Account</h3>
        <p class="card-description">Manage your account settings</p>
      </div>
      <div class="card-content">
        <div class="mb-4">
          <p class="text-muted mb-1">Account ID</p>
          <p>
            <%= user.id %>
          </p>
        </div>
        <div class="mb-4">
          <p class="text-muted">Account Balance</p>
          <p class="text-lg font-bold">$<%= typeof user.balance==='number' ? user.balance.toFixed(2) :
              parseFloat(user.balance || 0).toFixed(2) %>
          </p>
        </div>
        <div class="mt-4">
          <a href="/wallet" class="btn btn-outline btn-block mb-2">Manage Funds</a>
          <a href="/auth/logout" class="btn btn-danger btn-block">Logout</a>
        </div>
      </div>
    </div>

    <!-- Profile Picture Card -->
    <div class="card col-span-1">
      <div class="card-header">
        <h3 class="card-title">Profile Picture</h3>
        <p class="card-description">Customize your profile image</p>
      </div>
      <div class="card-content">
        <div class="text-center mb-4">
          <div class="profile-avatar mx-auto" id="profile-avatar">
            <% if (user.profile_picture) { %>
              <img src="<%= user.profile_picture %>" alt="<%= user.username %>'s profile picture" class="profile-img">
              <% } else { %>
                <div class="avatar">
                  <%= user.username.charAt(0).toUpperCase() %>
                </div>
                <% } %>
          </div>

          <div class="mt-4">
            <!-- Simple File Upload Form -->
            <form action="/profile/upload-profile-picture" method="POST" enctype="multipart/form-data" id="upload-form">
              <div class="file-input-container text-center">
                <input type="file" name="profile_picture" id="profile-picture-input" class="d-none"
                  accept="image/jpeg,image/png,image/gif">
                <button type="button" id="select-file-btn" class="btn btn-primary mb-3">
                  <i class="fas fa-upload"></i> Upload Profile Picture
                </button>
                <div id="file-info" class="mb-3" style="display: none;">
                  <span id="selected-filename" class="d-block mb-2 file-info"></span>
                  <!-- Image preview container -->
                  <div id="image-preview-container" class="mb-3" style="display: none;">
                    <img id="image-preview" src="#" alt="Image preview" class="img-thumbnail"
                      style="max-height: 150px; max-width: 100%;">
                  </div>
                  <button type="submit" class="btn btn-success">Save New Picture</button>
                </div>
              </div>
            </form>
            <p class="text-muted mt-2">JPG, GIF or PNG. 1MB max.</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Password Card -->
  <div class="card mt-6">
    <div class="card-header">
      <h3 class="card-title">Change Password</h3>
      <p class="card-description">Update your password to keep your account secure</p>
    </div>
    <div class="card-content">
      <form action="/profile/change-password" method="POST">
        <div class="form-group">
          <label for="current_password" class="form-label">Current Password</label>
          <input type="password" id="current_password" name="current_password" class="form-control" required>
        </div>

        <div class="form-group">
          <label for="new_password" class="form-label">New Password</label>
          <input type="password" id="new_password" name="new_password" class="form-control" required>
        </div>

        <div class="form-group">
          <label for="confirm_password" class="form-label">Confirm New Password</label>
          <input type="password" id="confirm_password" name="confirm_password" class="form-control" required>
        </div>

        <button type="submit" class="btn btn-primary">Change Password</button>
      </form>
    </div>
  </div>
</div>

<!-- Hidden debug info for troubleshooting -->
<div id="debug-info" style="display: none; border: 1px solid #ddd; margin-top: 20px; padding: 10px; font-size: 12px;">
  <h4>Debug Information</h4>
  <pre id="debug-output"></pre>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const fileInput = document.getElementById('profile-picture-input');
    const selectButton = document.getElementById('select-file-btn');
    const fileInfo = document.getElementById('file-info');
    const selectedFilename = document.getElementById('selected-filename');
    const form = document.getElementById('upload-form');
    const debugOutput = document.getElementById('debug-output');
    const debugInfo = document.getElementById('debug-info');
    const imagePreview = document.getElementById('image-preview');
    const imagePreviewContainer = document.getElementById('image-preview-container');
    const profileAvatar = document.getElementById('profile-avatar');

    // Debug function
    function log(message) {
      console.log(message);
      if (debugOutput) {
        debugOutput.textContent += message + '\n';
      }
    }

    // Show debug panel with Ctrl+Shift+D
    document.addEventListener('keydown', function (e) {
      if (e.ctrlKey && e.shiftKey && e.key === 'D') {
        debugInfo.style.display = debugInfo.style.display === 'none' ? 'block' : 'none';
      }
    });

    log('DOM loaded. File input found: ' + (fileInput ? 'Yes' : 'No'));
    log('Select button found: ' + (selectButton ? 'Yes' : 'No'));

    // Trigger file input click when button is clicked
    selectButton.addEventListener('click', function () {
      log('Select button clicked');
      fileInput.click();
    });

    // Handle file selection
    fileInput.addEventListener('change', function () {
      log('File input changed');

      if (this.files && this.files[0]) {
        const file = this.files[0];
        log('File selected: ' + file.name + ' (' + file.type + ', ' + Math.round(file.size / 1024) + ' KB)');

        // Validate file type
        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
        if (!validTypes.includes(file.type)) {
          log('Invalid file type: ' + file.type);
          alert('Please select a valid image file (JPG, PNG, or GIF)');
          this.value = '';
          fileInfo.style.display = 'none';
          imagePreviewContainer.style.display = 'none';
          return;
        }

        // Validate file size (1MB max)
        if (file.size > 1024 * 1024) {
          log('File too large: ' + Math.round(file.size / 1024) + ' KB');
          alert('File size must be less than 1MB');
          this.value = '';
          fileInfo.style.display = 'none';
          imagePreviewContainer.style.display = 'none';
          return;
        }

        // Show file info
        selectedFilename.textContent = `Selected: ${file.name} (${Math.round(file.size / 1024)} KB)`;
        fileInfo.style.display = 'block';

        // Show image preview
        const reader = new FileReader();
        reader.onload = function (e) {
          imagePreview.src = e.target.result;
          imagePreviewContainer.style.display = 'block';
          log('Image preview loaded');
        };
        reader.readAsDataURL(file);

        log('File validated and ready to upload');
      } else {
        log('No file selected');
        fileInfo.style.display = 'none';
        imagePreviewContainer.style.display = 'none';
      }
    });

    // Form submission - add loading state
    form.addEventListener('submit', function (e) {
      log('Form submitted');

      // Check if a file is selected
      if (!fileInput.files || !fileInput.files[0]) {
        log('Submit blocked: No file selected');
        e.preventDefault();
        alert('Please select an image to upload.');
        return;
      }

      const submitBtn = this.querySelector('button[type="submit"]');
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Uploading...';
      log('Form submission in progress...');

      // Set a flag in localStorage to indicate an upload is in progress
      localStorage.setItem('profilePictureUploadInProgress', 'true');
    });

    // Check if we just came back from a successful upload
    if (localStorage.getItem('profilePictureUploadInProgress') === 'true') {
      // Clear the flag
      localStorage.removeItem('profilePictureUploadInProgress');

      // Check if there's a success message on the page
      const successAlerts = document.querySelectorAll('.alert-success');
      if (successAlerts.length > 0 && successAlerts[0].textContent.includes('Profile picture updated')) {
        log('Profile picture update was successful, refreshing page to show new image');
        // Force a hard refresh to ensure the browser doesn't use a cached image
        window.location.reload(true);
      }
    }
  });
</script>